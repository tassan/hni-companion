// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  ADMIN
  USER
}

model User {
  id        Int         @id @default(autoincrement())
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
  email     String?     @unique
  name      String
  image     String?
  role      Role        @default(USER)
  Character Character[]
}

enum Village {
  KONOHA
  SUNA
  KIRIGAKURE
  IWA
  KUMOGAKURE
  UZUSHIO
}

enum CharacterRank {
  CHUNIN
  JOUNIN
  ANBU
  NUKENIN
  KAGE
}

enum TechiniqueRank {
  D
  C
  B
  A
  S
}

enum TechiniqueType {
  NINJUTSU
  GENJUTSU
  TAIJUTSU
  FUUINJUTSU
  FIGHTING_STYLE
}

model Technique {
  id                 Int                  @id @default(autoincrement())
  createdAt          DateTime             @default(now())
  updatedAt          DateTime             @updatedAt
  name               String
  rank               TechiniqueRank
  description        String
  type               TechiniqueType
  clanExclusive      Boolean
  villageExclusive   Boolean
  characterExclusive Boolean
  Clan               Clan?                @relation(fields: [clanId], references: [id])
  clanId             Int?
  Specialization     Specialization?      @relation(fields: [specializationId], references: [id])
  specializationId   Int?
  Character          Character            @relation(fields: [characterId], references: [id])
  characterId        Int
  CharacterTechnique CharacterTechnique[]
}

model Clan {
  id          Int         @id @default(autoincrement())
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  name        String
  image       String?
  village     Village
  description String
  Character   Character[]
  Technique   Technique[]
}

model Specialization {
  id             Int         @id @default(autoincrement())
  createdAt      DateTime    @default(now())
  updatedAt      DateTime    @updatedAt
  name           String
  description    String
  maxVacancy     Int
  currentVacancy Int
  Character      Character[]
  Technique      Technique[]
}

model Kuchiyose {
  id          Int         @id @default(autoincrement())
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  name        String
  description String
  image       String?
  Character   Character[]
}

enum TraitType {
  POSITIVE
  NEGATIVE
  NEUTRAL
}

model Trait {
  id             Int         @id @default(autoincrement())
  createdAt      DateTime    @default(now())
  updatedAt      DateTime    @updatedAt
  name           String
  description    String
  type           TraitType
  cost           Int
  maxVacancy     Int
  currentVacancy Int
  Character      Character[]
}

model Expertise {
  id          Int         @id @default(autoincrement())
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  name        String
  description String
  level       Int
  image       String?
  Character   Character[]
}

enum Alignment {
  GOOD
  NEUTRAL
  EVIL
}

enum MoralAlignment {
  LAWFUL
  NEUTRAL
  CHAOTIC
}

model Character {
  id                 Int                  @id @default(autoincrement())
  createdAt          DateTime             @default(now())
  updatedAt          DateTime             @updatedAt
  name               String
  image              String?
  village            Village
  rank               CharacterRank
  moralAlignment     MoralAlignment
  alignment          Alignment
  personality        String
  appearance         String
  trivias            String
  user               User                 @relation(fields: [userId], references: [id])
  userId             Int
  Clan               Clan?                @relation(fields: [clanId], references: [id])
  clanId             Int?
  Specialization     Specialization?      @relation(fields: [specializationId], references: [id])
  specializationId   Int?
  Kuchiyose          Kuchiyose?           @relation(fields: [kuchiyoseId], references: [id])
  kuchiyoseId        Int?
  Trait              Trait?               @relation(fields: [traitId], references: [id])
  traitId            Int?
  Expertise          Expertise?           @relation(fields: [expertiseId], references: [id])
  expertiseId        Int?
  CharacterAttribute CharacterAttribute[]
  CharacterTechnique CharacterTechnique[]
  Technique          Technique[]
}

enum AttributeType {
  STRENGTH
  AGILITY
  DEXTERITY
  VITALITY
  STAMINA
  PERCEPTION
  CHARISMA
  KNOWLEDGE
  FOCUS
  JUTSU
  CHAKRA
  CHAKRA_CONTROL
}

model Attribute {
  id                 Int                  @id @default(autoincrement())
  createdAt          DateTime             @default(now())
  updatedAt          DateTime             @updatedAt
  name               String
  description        String
  type               AttributeType
  CharacterAttribute CharacterAttribute[]
}

model CharacterAttribute {
  id          Int       @id @default(autoincrement())
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  value       Int
  Character   Character @relation(fields: [characterId], references: [id])
  characterId Int
  Attribute   Attribute @relation(fields: [attributeId], references: [id])
  attributeId Int
}

model CharacterTechnique {
  id          Int       @id @default(autoincrement())
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  Character   Character @relation(fields: [characterId], references: [id])
  characterId Int
  Technique   Technique @relation(fields: [techniqueId], references: [id])
  techniqueId Int
}
